<header><largefont><b>Questionnaire</b></largefont></header>
1. How could multi-label classification improve the usability of the bear classifier?
2. How do we encode the dependent variable in a multi-label classification
problem?
3. How do you access the rows and columns of a DataFrame as if it were a matrix?
4. How do you get a column by name from a DataFrame?
5. What is the difference between a Dataset and DataLoader ?
6. What does a Datasets object normally contain?
7. What does a DataLoaders object normally contain?
lambda
8. What does do in Python?
9. What are the methods to customize how the independent and dependent vari‐
ables are created with the data block API?
10. Why is softmax not an appropriate output activation function when using a one-
hot-encoded target?
11. Why is nll_loss not an appropriate loss function when using a one-hot-encoded
target?
12. What is the difference between nn.BCELoss and nn.BCEWithLogitsLoss?
13. Why can’t we use regular accuracy in a multi-label problem?
14. When is it OK to tune a hyperparameter on the validation set?
y_range
15. How is implemented in fastai? (See if you can implement it yourself and
test it without peeking!)
16. What is a regression problem? What loss function should you use for such a
problem?
17. What do you need to do to make sure the fastai library applies the same data aug‐
mentation to your input images and your target point coordinates?
<header><largefont><b>Further</b></largefont> <largefont><b>Research</b></largefont></header>
1. Read a tutorial about Pandas DataFrames and experiment with a few methods
that look interesting to you. See the book’s website for recommended tutorials.
2. Retrain the bear classifier using multi-label classification. See if you can make it
work effectively with images that don’t contain any bears, including showing that
information in the web application. Try an image with two kinds of bears. Check
whether the accuracy on the single-label dataset is impacted using multi-label
classification.