In practice, we have not seen many examples of people training multi-label classifiers
for this purpose—but we often see both users and developers complaining about this
problem. It appears that this simple solution is not at all widely understood or appre‐
ciated! Because in practice it is probably more common to have some images with
zero matches or more than one match, we should probably expect in practice that
multi-label classifiers are more widely applicable than single-label classifiers.
First let’s see what a multi-label dataset looks like; then we’ll explain how to get it
ready for our model. You’ll see that the architecture of the model does not change
from the preceding chapter; only the loss function does. Let’s start with the data.
<header><largefont><b>The</b></largefont> <largefont><b>Data</b></largefont></header>
For our example, we are going to use the PASCAL dataset, which can have more than
one kind of classified object per image.
We begin by downloading and extracting the dataset as per usual:
<b>from</b> <b>fastai.vision.all</b> <b>import</b> *
path = untar_data(URLs.PASCAL_2007)
This dataset is different from the ones we have seen before, in that it is not structured
by filename or folder but instead comes with a CSV file telling us what labels to use
for each image. We can inspect the CSV file by reading it into a Pandas DataFrame:
df = pd.read_csv(path/'train.csv')
df.head()
<b>fname</b> <b>labels</b> <b>is_valid</b>
<b>0</b> 000005.jpg chair True
<b>1</b> 000007.jpg car True
<b>2</b> 000009.jpg horseperson True
<b>3</b> 000012.jpg car False
<b>4</b>
000016.jpg bicycle True
As you can see, the list of categories in each image is shown as a space-delimited
string.
<header><largefont><b>Pandas</b></largefont> <largefont><b>and</b></largefont> <largefont><b>DataFrames</b></largefont></header>
No, it’s not actually a panda! <i>Pandas</i> is a Python library that is used to manipulate and
analyze tabular and time series data. The main class is DataFrame, which represents a
table of rows and columns.