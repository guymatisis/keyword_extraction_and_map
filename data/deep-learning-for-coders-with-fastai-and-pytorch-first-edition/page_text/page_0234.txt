biwi = DataBlock(
blocks=(ImageBlock, PointBlock),
get_items=get_image_files,
get_y=get_ctr,
splitter=FuncSplitter(lambda o: o.parent.name=='13'),
batch_tfms=[*aug_transforms(size=(240,320)),
Normalize.from_stats(*imagenet_stats)]
)
<b>PointsandDataAugmentation</b>
We’re not aware of other libraries (except for fastai) that automati‐
cally and correctly apply data augmentation to coordinates. So, if
you’re working with another library, you may need to disable data
augmentation for these kinds of problems.
Before doing any modeling, we should look at our data to confirm it seems OK:
dls = biwi.dataloaders(path)
dls.show_batch(max_n=9, figsize=(8,6))
That’s looking good! As well as looking at the batch visually, it’s a good idea to also
look at the underlying tensors (especially as a student; it will help clarify your under‐
standing of what your model is really seeing):
xb,yb = dls.one_batch()
xb.shape,yb.shape
(torch.Size([64, 3, 240, 320]), torch.Size([64, 1, 2]))
Make sure that you understand <i>why</i> these are the shapes for our mini-batches.