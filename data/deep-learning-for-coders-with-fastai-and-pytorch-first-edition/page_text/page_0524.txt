The novelty with Grad-CAM is that we can use it on any layer. For example, here we
use it on the output of the second-to-last ResNet group:
<b>with</b> HookBwd(learn.model[0][-2]) <b>as</b> hookg:
<b>with</b> Hook(learn.model[0][-2]) <b>as</b> hook:
output = learn.model.eval()(x.cuda())
act = hook.stored
output[0,cls].backward()
grad = hookg.stored
w = grad[0].mean(dim=[1,2], keepdim=True)
cam_map = (w * act[0]).sum(0)
And we can now view the activation map for this layer:
_,ax = plt.subplots()
x_dec.show(ctx=ax)
ax.imshow(cam_map.detach().cpu(), alpha=0.6, extent=(0,224,224,0),
interpolation='bilinear', cmap='magma');