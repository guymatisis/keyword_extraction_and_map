dense_1 (Dense) (None, 100) 30100
_________________________________________________________________
dense_2 (Dense) (None, 10) 1010
=================================================================
Total params: 266,610
Trainable params: 266,610
Non-trainable params: 0
_________________________________________________________________
Note that Dense layers often have a <i>lot</i> of parameters. For example, the first hidden
layer has 784 × 300 connection weights, plus 300 bias terms, which adds up to
235,500 parameters! This gives the model quite a lot of flexibility to fit the training
data, but it also means that the model runs the risk of overfitting, especially when you
do not have a lot of training data. We will come back to this later.
You can easily get a model’s list of layers, to fetch a layer by its index, or you can fetch
it by name:
<b>>>></b> model.layers
[<tensorflow.python.keras.layers.core.Flatten at 0x132414e48>,
<tensorflow.python.keras.layers.core.Dense at 0x1324149b0>,
<tensorflow.python.keras.layers.core.Dense at 0x1356ba8d0>,
<tensorflow.python.keras.layers.core.Dense at 0x13240d240>]
<b>>>></b> hidden1 = model.layers[1]
<b>>>></b> hidden1.name
'dense'
<b>>>></b> model.get_layer('dense') <b>is</b> hidden1
True
get_weights()
All the parameters of a layer can be accessed using its and
set_weights() methods. For a Dense layer, this includes both the connection weights
and the bias terms:
<b>>>></b> weights, biases = hidden1.get_weights()
<b>>>></b> weights
array([[ 0.02448617, -0.00877795, -0.02189048, ..., -0.02766046,
0.03859074, -0.06889391],
...,
[-0.06022581, 0.01577859, -0.02585464, ..., -0.00527829,
0.00272203, -0.06793761]], dtype=float32)
<b>>>></b> weights.shape
(784, 300)
<b>>>></b> biases
array([0., 0., 0., 0., 0., 0., 0., 0., 0., ..., 0., 0., 0.], dtype=float32)
<b>>>></b> biases.shape
(300,)
Dense
Notice that the layer initialized the connection weights randomly (which is
needed to break symmetry, as we discussed earlier), and the biases were initialized to
zeros, which is fine. If you ever want to use a different initialization method, you can
kernel_initializer
set (kernel is another name for the matrix of connection