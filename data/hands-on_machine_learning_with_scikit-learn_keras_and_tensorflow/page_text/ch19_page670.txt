Since a SavedModel saves the computation graph, it can only be
used with models that are based exclusively on TensorFlow opera‐
tions, excluding the tf.py_function() operation (which wraps
arbitrary Python code). It also excludes dynamic tf.keras models
(see Appendix G), since these models cannot be converted to com‐
putation graphs. Dynamic models need to be served using other
tools (e.g., Flask).
A SavedModel represents a version of your model. It is stored as a directory contain‐
ing a <i>saved_model.pb</i> file, which defines the computation graph (represented as a seri‐
alized protocol buffer), and a <i>variables</i> subdirectory containing the variable values.
For models containing a large number of weights, these variable values may be split
across multiple files. A SavedModel also includes an <i>assets</i> subdirectory that may con‐
tain additional data, such as vocabulary files, class names, or some example instances
for this model. The directory structure is as follows (in this example, we don’t use
assets):
my_mnist_model
└── 0001
├── assets
├── saved_model.pb
└── variables
├── variables.data-00000-of-00001
└── variables.index
As you might expect, you can load a SavedModel using the tf.saved_model.load()
function. However, the returned object is not a Keras model: it represents the Saved‐
Model, including its computation graph and variable values. You can use it like a
function, and it will make predictions (make sure to pass the inputs as tensors of the
appropriate type):
saved_model = tf.saved_model.load(model_path)
y_pred = saved_model(tf.constant(X_new, dtype=tf.float32))
Alternatively, you can load this SavedModel directly to a Keras model using the
keras.models.load_model()
function:
model = keras.models.load_model(model_path)
y_pred = model.predict(tf.constant(X_new, dtype=tf.float32))
saved_model_cli
TensorFlow also comes with a small command-line tool to inspect
SavedModels:
$ <b>export</b> <b>ML_PATH="$HOME/ml"</b> # point to this project, wherever it is
$ <b>cd</b> <b>$ML_PATH</b>
$ <b>saved_model_cli</b> <b>show</b> <b>--dir</b> <b>my_mnist_model/0001</b> <b>--all</b>
MetaGraphDef with tag-set: 'serve' contains the following SignatureDefs:
signature_def['__saved_model_init_op']:
[...]