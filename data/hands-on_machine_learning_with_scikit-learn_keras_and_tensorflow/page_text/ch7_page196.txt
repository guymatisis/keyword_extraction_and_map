<b>>>></b> bag_clf = BaggingClassifier(
<b>...</b> DecisionTreeClassifier(), n_estimators=500,
<b>...</b> bootstrap=True, n_jobs=-1, oob_score=True)
<b>...</b>
<b>>>></b> bag_clf.fit(X_train, y_train)
<b>>>></b> bag_clf.oob_score_
0.90133333333333332
BaggingClassifier
According to this oob evaluation, this is likely to achieve about
90.1% accuracy on the test set. Let’s verify this:
<b>>>></b> <b>from</b> <b>sklearn.metrics</b> <b>import</b> accuracy_score
<b>>>></b> y_pred = bag_clf.predict(X_test)
<b>>>></b> accuracy_score(y_test, y_pred)
0.91200000000000003
We get 91.2% accuracy on the test set—close enough!
The oob decision function for each training instance is also available through the
oob_decision_function_ variable. In this case (since the base estimator has a pre
dict_proba()
method), the decision function returns the class probabilities for each
training instance. For example, the oob evaluation estimates that the first training
instance has a 68.25% probability of belonging to the positive class (and 31.75% of
belonging to the negative class):
<b>>>></b> bag_clf.oob_decision_function_
array([[0.31746032, 0.68253968],
[0.34117647, 0.65882353],
[1. , 0. ],
...
[1. , 0. ],
[0.03108808, 0.96891192],
[0.57291667, 0.42708333]])
<header><largefont><b>Random</b></largefont> <largefont><b>Patches</b></largefont> <largefont><b>and</b></largefont> <largefont><b>Random</b></largefont> <largefont><b>Subspaces</b></largefont></header>
The BaggingClassifier class supports sampling the features as well. Sampling is
max_features bootstrap_features
controlled by two hyperparameters: and . They
work the same way as max_samples and bootstrap , but for feature sampling instead
of instance sampling. Thus, each predictor will be trained on a random subset of the
input features.
This technique is particularly useful when you are dealing with high-dimensional
inputs (such as images). Sampling both training instances and features is called the
<i>Random</i> <i>Patches</i> method.7 Keeping all training instances (by setting bootstrap=False
7 GillesLouppeandPierreGeurts,“EnsemblesonRandomPatches,”LectureNotesinComputerScience7523
(2012):346–361.