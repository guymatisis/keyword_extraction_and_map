APIs for other languages are also available. In any case, TensorFlow’s execution
engine will take care of running the operations efficiently, even across multiple devi‐
ces and machines if you tell it to.
<i>Figure</i> <i>12-2.</i> <i>TensorFlow’s</i> <i>architecture</i>
TensorFlow runs not only on Windows, Linux, and macOS, but also on mobile devi‐
ces (using <i>TensorFlow</i> <i>Lite),</i> including both iOS and Android (see Chapter 19). If you
do not want to use the Python API, there are C++, Java, Go, and Swift APIs. There is
even a JavaScript implementation called <i>TensorFlow.js</i> that makes it possible to run
your models directly in your browser.
There’s more to TensorFlow than the library. TensorFlow is at the center of an exten‐
sive ecosystem of libraries. First, there’s TensorBoard for visualization (see Chap‐
ter 10). Next, there’s TensorFlow Extended (TFX), which is a set of libraries built by
Google to productionize TensorFlow projects: it includes tools for data validation,
preprocessing, model analysis, and serving (with TF Serving; see Chapter 19). Goo‐
gle’s <i>TensorFlow</i> <i>Hub</i> provides a way to easily download and reuse pretrained neural
networks. You can also get many neural network architectures, some of them pre‐
trained, in TensorFlow’s model garden. Check out the TensorFlow Resources and
<i>https://github.com/jtoy/awesome-tensorflow</i> for more TensorFlow-based projects. You
will find hundreds of TensorFlow projects on GitHub, so it is often easy to find exist‐
ing code for whatever you are trying to do.
More and more ML papers are released along with their implemen‐
tations, and sometimes even with pretrained models. Check out
<i>https://paperswithcode.com/</i> to easily find them.