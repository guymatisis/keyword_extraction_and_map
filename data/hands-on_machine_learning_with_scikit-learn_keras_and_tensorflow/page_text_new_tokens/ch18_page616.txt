actions, or other kinds of actions (e.g., continuous). Since the pole is leaning toward
the right ( obs[2] > 0 ), letâ€™s accelerate the cart toward the right:
<b>>>></b> action = 1 <i>#</i> <i>accelerate</i> <i>right</i>
<b>>>></b> obs, reward, done, info = env.step(action)
<b>>>></b> obs
array([-0.01261699, 0.19292789, 0.04204097, -0.28092127])
<b>>>></b> reward
1.0
<b>>>></b> done
False
<b>>>></b> info
{}
The step() method executes the given action and returns four values:
obs
obs[1] >
This is the new observation. The cart is now moving toward the right (
0). (obs[2] > 0),
The pole is still tilted toward the right but its angular velocity is
now negative ( obs[3] < 0 ), so it will likely be tilted toward the left after the next
step.
reward
In this environment, you get a reward of 1.0 at every step, no matter what you do,
so the goal is to keep the episode running as long as possible.
done
True
This value will be when the episode is over. This will happen when the pole
tilts too much, or goes off the screen, or after 200 steps (in this last case, you have
won). After that, the environment must be reset before it can be used again.
info
This environment-specific dictionary can provide some extra information that
you may find useful for debugging or for training. For example, in some games it
may indicate how many lives the agent has.
Once you have finished using an environment, you should call its
close()
method to free resources.