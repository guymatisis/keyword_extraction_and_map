• Write another script that will evaluate both the new model and the previous
model on the updated test set, and deploy the model to production if the perfor‐
mance has not decreased (if it did, make sure you investigate why).
You should also make sure you evaluate the model’s input data quality. Sometimes
performance will degrade slightly because of a poor-quality signal (e.g., a malfunc‐
tioning sensor sending random values, or another team’s output becoming stale), but
it may take a while before your system’s performance degrades enough to trigger an
alert. If you monitor your model’s inputs, you may catch this earlier. For example, you
could trigger an alert if more and more inputs are missing a feature, or if its mean or
standard deviation drifts too far from the training set, or a categorical feature starts
containing new categories.
Finally, make sure you keep backups of every model you create and have the process
and tools in place to roll back to a previous model quickly, in case the new model
starts failing badly for some reason. Having backups also makes it possible to easily
compare new models with previous ones. Similarly, you should keep backups of every
version of your datasets so that you can roll back to a previous dataset if the new one
ever gets corrupted (e.g., if the fresh data that gets added to it turns out to be full of
outliers). Having backups of your datasets also allows you to evaluate any model
against any previous dataset.
You may want to create several subsets of the test set in order to
evaluate how well your model performs on specific parts of the
data. For example, you may want to have a subset containing only
the most recent data, or a test set for specific kinds of inputs (e.g.,
districts located inland versus districts located near the ocean).
This will give you a deeper understanding of your model’s
strengths and weaknesses.
As you can see, Machine Learning involves quite a lot of infrastructure, so don’t be
surprised if your first ML project takes a lot of effort and time to build and deploy to
production. Fortunately, once all the infrastructure is in place, going from idea to
production will be much faster.
<header><largefont><b>Try</b></largefont> <largefont><b>It</b></largefont> <largefont><b>Out!</b></largefont></header>
Hopefully this chapter gave you a good idea of what a Machine Learning project
looks like as well as showing you some of the tools you can use to train a great system.
As you can see, much of the work is in the data preparation step: building monitoring
tools, setting up human evaluation pipelines, and automating regular model training.
The Machine Learning algorithms are important, of course, but it is probably prefera‐