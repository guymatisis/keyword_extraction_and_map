<b>CreatingthemodelusingtheSequentialAPI</b>
Now let’s build the neural network! Here is a classification MLP with two hidden
layers:
model = keras.models.Sequential()
model.add(keras.layers.Flatten(input_shape=[28, 28]))
model.add(keras.layers.Dense(300, activation="relu"))
model.add(keras.layers.Dense(100, activation="relu"))
model.add(keras.layers.Dense(10, activation="softmax"))
Let’s go through this code line by line:
• The first line creates a Sequential model. This is the simplest kind of Keras
model for neural networks that are just composed of a single stack of layers con‐
nected sequentially. This is called the Sequential API.
• Next, we build the first layer and add it to the model. It is a Flatten layer whose
X
role is to convert each input image into a 1D array: if it receives input data , it
computes X.reshape(-1, 1). This layer does not have any parameters; it is just
there to do some simple preprocessing. Since it is the first layer in the model, you
input_shape,
should specify the which doesn’t include the batch size, only the
shape of the instances. Alternatively, you could add a keras.layers.InputLayer
input_shape=[28,28]
as the first layer, setting .
• Next we add a Dense hidden layer with 300 neurons. It will use the ReLU activa‐
Dense
tion function. Each layer manages its own weight matrix, containing all the
connection weights between the neurons and their inputs. It also manages a vec‐
tor of bias terms (one per neuron). When it receives some input data, it computes
Equation 10-2.
• Then we add a second Dense hidden layer with 100 neurons, also using the ReLU
activation function.
• Finally, we add a Dense output layer with 10 neurons (one per class), using the
softmax activation function (because the classes are exclusive).
activation="relu" activa
Specifying is equivalent to specifying
tion=keras.activations.relu.
Other activation functions are
keras.activations
available in the package, we will use many of
them in this book. See <i>https://keras.io/activations/</i> for the full list.
Instead of adding the layers one by one as we just did, you can pass a list of layers
Sequential
when creating the model: