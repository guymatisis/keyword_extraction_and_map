Last but not least, TensorFlow has a dedicated team of passionate and helpful devel‐
opers, as well as a large community contributing to improving it. To ask technical
questions, you should use <i>http://stackoverflow.com/</i> and tag your question with <i>ten‐</i>
<i>sorflow</i> and <i>python.</i> You can file bugs and feature requests through GitHub. For gen‐
eral discussions, join the Google group.
OK, it’s time to start coding!
<header><largefont><b>Using</b></largefont> <largefont><b>TensorFlow</b></largefont> <largefont><b>like</b></largefont> <largefont><b>NumPy</b></largefont></header>
TensorFlow’s API revolves around <i>tensors,</i> which flow from operation to operation—
ndarray
hence the name TensorFlow. A tensor is very similar to a NumPy : it is usu‐
ally a multidimensional array, but it can also hold a scalar (a simple value, such as 42 ).
These tensors will be important when we create custom cost functions, custom met‐
rics, custom layers, and more, so let’s see how to create and manipulate them.
<header><largefont><b>Tensors</b></largefont> <largefont><b>and</b></largefont> <largefont><b>Operations</b></largefont></header>
tf.constant()
You can create a tensor with . For example, here is a tensor represent‐
ing a matrix with two rows and three columns of floats:
<b>>>></b> tf.constant([[1., 2., 3.], [4., 5., 6.]]) <i>#</i> <i>matrix</i>
<tf.Tensor: id=0, shape=(2, 3), dtype=float32, numpy=
array([[1., 2., 3.],
[4., 5., 6.]], dtype=float32)>
<b>>>></b> tf.constant(42) <i>#</i> <i>scalar</i>
<tf.Tensor: id=1, shape=(), dtype=int32, numpy=42>
ndarray tf.Tensor dtype
Just like an , a has a shape and a data type ( ):
<b>>>></b> t = tf.constant([[1., 2., 3.], [4., 5., 6.]])
<b>>>></b> t.shape
TensorShape([2, 3])
<b>>>></b> t.dtype
tf.float32
Indexing works much like in NumPy:
<b>>>></b> t[:, 1:]
<tf.Tensor: id=5, shape=(2, 2), dtype=float32, numpy=
array([[2., 3.],
[5., 6.]], dtype=float32)>
<b>>>></b> t[..., 1, tf.newaxis]
<tf.Tensor: id=15, shape=(2, 1), dtype=float32, numpy=
array([[2.],
[5.]], dtype=float32)>
Most importantly, all sorts of tensor operations are available:
<b>>>></b> t + 10
<tf.Tensor: id=18, shape=(2, 3), dtype=float32, numpy=