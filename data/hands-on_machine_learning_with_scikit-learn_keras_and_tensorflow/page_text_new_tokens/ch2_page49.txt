<i>Figure</i> <i>2-7.</i> <i>Summary</i> <i>of</i> <i>each</i> <i>numerical</i> <i>attribute</i>
The count , mean , min , and max rows are self-explanatory. Note that the null values are
count total_bedrooms
ignored (so, for example, the of is 20,433, not 20,640). The
std row shows the <i>standard</i> <i>deviation,</i> which measures how dispersed the values are.12
The 25%, 50%, and 75% rows show the corresponding <i>percentiles:</i> a percentile indi‐
cates the value below which a given percentage of observations in a group of observa‐
tions fall. For example, 25% of the districts have a housing_median_age lower than
18, while 50% are lower than 29 and 75% are lower than 37. These are often called the
25th percentile (or first <i>quartile),</i> the median, and the 75th percentile (or third
quartile).
Another quick way to get a feel of the type of data you are dealing with is to plot a
histogram for each numerical attribute. A histogram shows the number of instances
(on the vertical axis) that have a given value range (on the horizontal axis). You can
hist()
either plot this one attribute at a time, or you can call the method on the
whole dataset (as shown in the following code example), and it will plot a histogram
for each numerical attribute (see Figure 2-8):
%matplotlib inline <i>#</i> <i>only</i> <i>in</i> <i>a</i> <i>Jupyter</i> <i>notebook</i>
<b>import</b> <b>matplotlib.pyplot</b> <b>as</b> <b>plt</b>
housing.hist(bins=50, figsize=(20,15))
plt.show()
12 Thestandarddeviationisgenerallydenotedσ(theGreeklettersigma),anditisthesquarerootofthevar‐
<i>iance,whichistheaverageofthesquareddeviationfromthemean.Whenafeaturehasabell-shapednormal</i>
<i>distribution(alsocalledaGaussiandistribution),whichisverycommon,the“68-95-99.7”ruleapplies:about</i>
68%ofthevaluesfallwithin1σofthemean,95%within2σ,and99.7%within3σ.